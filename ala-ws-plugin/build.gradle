buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
//        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.3.4"
    }
}

group "org.grails.plugins"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
apply plugin:"org.grails.grails-gsp"
//apply plugin:"asset-pipeline"
apply plugin:"maven-publish"

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

configurations {
    developmentOnly
    testImplementation {
        exclude group: 'ch.qos.logback', module: 'logback-classic'
    }
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
//    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.3.4"
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"

    // Grails plugin dependencies
    implementation 'org.grails.plugins:http-builder-helper:1.1.0'
    implementation('org.codehaus.groovy.modules.http-builder:http-builder:0.7.1') {
        exclude module: "commons-logging"
        exclude module: "groovy"
    }
    implementation project(':ala-auth')
    implementation project(':userdetails-service-client')
    implementation(pac4j.oidc)
    implementation(pac4j.jee)

    // Regular JAR dependencies
    implementation "org.apache.httpcomponents:httpmime:4.5.3"
    implementation "javax.validation:validation-api:1.1.0.Final"
    implementation "javax.el:javax.el-api:2.2.4"

    implementation 'org.glassfish.web:javax.el:2.2.6'
    implementation "org.hibernate:hibernate-validator:5.1.3.Final"
    implementation "org.hibernate:hibernate-validator-annotation-processor:5.1.3.Final"

    testImplementation 'uk.org.lidalia:slf4j-test:1.2.0'

    testImplementation ("io.ratpack:ratpack-core:1.9.0") {
        exclude group: 'io.ratpack', module: 'ratpack-guice'
    }
    testImplementation "io.ratpack:ratpack-test:1.2.0"
    testImplementation ("io.ratpack:ratpack-groovy:1.2.0") {
        exclude group: 'io.ratpack', module: 'ratpack-guice'
    }
    testImplementation "io.ratpack:ratpack-groovy-test:1.2.0"
}

compileGroovy {
    groovyOptions.javaAnnotationProcessing = true
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

compileJava.dependsOn(processResources)

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(Test) {
    useJUnitPlatform()
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'ALA WS Plugin'
                description = 'Plugin for invoking ALA web services'
                url = 'https://github.com/AtlasOfLivingAustralia/ala-ws-plugin'
                licenses {
                    license {
                        name = 'MPL-1.1'
                        url = 'https://www.mozilla.org/en-US/MPL/1.1/'
                    }
                }
                developers {
                }
                scm {
                    connection = 'scm:git:git://github.com/AtlasOfLivingAustralia/ala-ws-plugin.git'
                    developerConnection = 'scm:git:ssh://github.com:AtlasOfLivingAustralia/ala-ws-plugin.git'
                    url = 'https://github.com/AtlasOfLivingAustralia/ala-ws-plugin/tree/main'
                }
            }
        }
    }
}
