buildscript {
    repositories {
        mavenLocal()
        maven { url "https://nexus.ala.org.au/content/groups/public/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
//        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.0.10"
    }
}

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"org.grails.grails-plugin"
//apply plugin:"asset-pipeline"
apply plugin:"org.grails.grails-gsp"
apply plugin: 'maven'
apply plugin: 'maven-publish'


version "5.2.0-SNAPSHOT"
group 'org.grails.plugins'

repositories {
    mavenLocal()
    maven { url "https://nexus.ala.org.au/content/groups/public/" }
    maven { url "https://repo.grails.org/grails/core" }
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    compile "org.springframework.boot:spring-boot-starter-tomcat"
    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"
    compile "org.grails.plugins:cache"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:scaffolding"
    compile "org.grails.plugins:gsp"
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web-plugin"
//    runtime "com.bertramlabs.plugins:asset-pipeline-grails:3.0.10"
    testCompile "io.micronaut:micronaut-inject-groovy"
    testCompile "org.grails:grails-gorm-testing-support"
    testCompile "org.mockito:mockito-core"
    testCompile "org.grails:grails-web-testing-support"

    compile "au.org.ala:userdetails-service-client:2.0.0"
    testCompile "com.squareup.retrofit2:retrofit-mock:2.9.0"

    compile 'au.org.ala:ala-cas-client:3.0.0'

    implementation 'au.org.ala.grails:interceptor-annotation-matcher:1.0.0'

    compile 'org.pac4j:pac4j-oidc:5.4.3'
    compile 'org.pac4j:pac4j-javaee:5.4.3'
    compile 'org.pac4j:javaee-pac4j:7.0.0'

    // Not required but this plugin can react to the presence of Spring Session
    compileOnly 'org.springframework.session:spring-session-core'
    compileOnly 'org.springframework.session:spring-session-data-mongodb'
    compileOnly 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Java 8
//    compile 'org.pac4j:pac4j-oidc:4.5.4'
////    compile 'org.pac4j:pac4j-j2e:4.5.4'
////    compile 'org.pac4j:jee-pac4j:4.5.4'
//    compile 'org.pac4j:jee-pac4j:5.0.0'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    compile group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '2.7.0'

}

compileGroovy {
    groovyOptions.javaAnnotationProcessing = true
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

compileJava.dependsOn(processResources)

bootRun {
    ignoreExitValue true
    jvmArgs(
            '-Dspring.output.ansi.enabled=always',
            '-noverify',
            '-XX:TieredStopAtLevel=1',
            '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}
// enable if you wish to package this plugin as a standalone application
bootJar.enabled = false

publishing {
    repositories {
        maven {
            name 'Nexus'
            url "https://nexus.ala.org.au/content/repositories/${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases' }"
            credentials {
                username = System.getenv('TRAVIS_DEPLOY_USERNAME')
                password = System.getenv('TRAVIS_DEPLOY_PASSWORD')
            }
        }
    }
    publications {
        maven(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = 'ALA Auth Plugin'
                description = 'Authentication for ALA Apps'
                url = 'https://github.com/AtlasOfLivingAustralia/ala-auth-plugin'
                licenses {
                    license {
                        name = 'MPL-1.1'
                        url = 'https://www.mozilla.org/en-US/MPL/1.1/'
                    }
                }
                developers {
                    developer {
                        id = 'sbearcsiro'
                        name = 'Simon Bear'
                        email = 'simon.bear@csiro.au'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/AtlasOfLivingAustralia/ala-auth-plugin.git'
                    developerConnection = 'scm:git:ssh://github.com:AtlasOfLivingAustralia/ala-auth-plugin.git'
                    url = 'https://github.com/AtlasOfLivingAustralia/ala-auth-plugin/tree/main'
                }
            }

        }
    }
}
